using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ChristmasToy
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());

            string firstRowDashes = new string('-', 2 * n);
            string firstRowStars = new string('*', n);
            Console.WriteLine("{0}{1}{0}", firstRowDashes, firstRowStars);
            
            var ampersand = n + 2;
            var dashes = 2 * n - 2;
            for (int i = 1; i <= n / 2; i++)
            {                
                string firstAmpersand = new string('&', ampersand);
                string firstDashes = new string('-', dashes);
                string stars = new string('*', i);
                Console.WriteLine("{0}{1}{2}{1}{0}", firstDashes, stars, firstAmpersand);

                ampersand += 2;
                dashes-=2;
            }                     

            int secondDashes = n - 1;
            int tilde = 3 * n - 2;
            for (int row = 1; row <= n/2; row++)
            {
                string secondDashesRow = new string('-', secondDashes);
                string tildeRow = new string('~', tilde);

                Console.WriteLine("{0}**{1}**{0}", secondDashesRow, tildeRow, secondDashesRow);

                tilde += 2;
                secondDashes--;                
            }

            string middleRowPipe = new string('|', (4 * n) - 2);
            string middleRowDashes = new string('-', n / 2);
            Console.WriteLine("{0}*{1}*{0}", middleRowDashes, middleRowPipe);
                                        

            int thirdDashes = n / 2;
            int secondTilde = 4 * n - 4;
            for (int row = n / 2; row >= 1; row--)
            {
                string secondDashesRow = new string('-', thirdDashes);
                string tildeRow = new string('~', secondTilde);

                Console.WriteLine("{0}**{1}**{0}", secondDashesRow, tildeRow, secondDashesRow);

                secondTilde-=2;
                thirdDashes++;
            }

            var secondAmpersand = n * 2;
            var secondDashesRows = n;
            for (int i = n / 2; i >= 1; i--)
            {
                string firstAmpersand = new string('&', secondAmpersand);
                string firstDashes = new string('-', secondDashesRows);
                string stars = new string('*', i);
                Console.WriteLine("{0}{1}{2}{1}{0}", firstDashes, stars, firstAmpersand);

                secondAmpersand -= 2;
                secondDashesRows += 2;
            }

            string lastRowDashes = new string('-', 2 * n);
            string lastRowStars = new string('*', n);
            Console.WriteLine("{0}{1}{0}", lastRowDashes, lastRowStars);
        }
    }
}
